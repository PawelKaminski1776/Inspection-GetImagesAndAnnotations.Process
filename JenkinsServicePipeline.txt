pipeline {
    agent any
	options {
		skipDefaultCheckout(true)
	}
    parameters {
        string(name: 'SERVICE_NAME', defaultValue: 'NewService', description: 'Enter the new service name')
        string(name: 'PORT_NUMBER', defaultValue: '5001', description: 'Enter the new port number')
        string(name: 'GITHUB_ORG', defaultValue: 'PawelKaminski1776', description: 'GitHub Organization or Username')
    }

    environment {
        TEMPLATE_REPO = "https://github.com/${params.GITHUB_ORG}/Inspection-Template.git"
		TEMPLATE_DIR = "Inspection-Template"
        NEW_REPO_NAME = "Inspection-${params.SERVICE_NAME}.Process"
        NEW_REPO = "https://github.com/${params.GITHUB_ORG}/${NEW_REPO_NAME}.git"
        LOCAL_FOLDER = "Inspection-${params.SERVICE_NAME}.Process"
        PROJECT_NAME = "Inspection-${params.SERVICE_NAME}.Process"
        JENKINS_FOLDER = "Docker-Deployment"
        JENKINS_USER = "pawelkaminski1776"
        JENKINS_API_TOKEN = credentials('jenkins-api-token')
        GITHUB_TOKEN = credentials('github-api-token')
        JENKINS_URL = "http://localhost:8080/"
    }

    stages {
		
		
        stage('Clone Template') {
             steps {
                 script {
                     bat """
                     rmdir /s /q ${LOCAL_FOLDER} 2>nul
                     git clone %TEMPLATE_REPO% %LOCAL_FOLDER%
                     """
                 }
             }
         }
		
        stage('Rename Project and Update Files') {
            steps {
                script {
                    bat """
					ren Inspection-Template.Process Inspection-%SERVICE_NAME%.Process
					cd Inspection-%SERVICE_NAME%.Process
                    ren Inspection-Template.Channel Inspection-%SERVICE_NAME%.Channel
					cd Inspection-%SERVICE_NAME%.Channel
					ren Inspection-Template.Channel.csproj Inspection-%SERVICE_NAME%.Channel.csproj
					ren Inspection-Template.Channel.csproj.user Inspection-%SERVICE_NAME%.Channel.csproj.user
					cd ..
                    ren Inspection-Template.Controllers Inspection-%SERVICE_NAME%.Controllers
					cd Inspection-%SERVICE_NAME%.Controllers
					ren Inspection-Template.Controllers.csproj Inspection-%SERVICE_NAME%.Controllers.csproj
					ren Inspection-Template.Controllers.csproj.user Inspection-%SERVICE_NAME%.Controllers.csproj.user
					cd ..
                    ren Inspection-Template.Handlers Inspection-%SERVICE_NAME%.Handlers
					cd Inspection-%SERVICE_NAME%.Handlers
					ren Inspection-Template.Handlers.csproj Inspection-%SERVICE_NAME%.Handlers.csproj
					ren Inspection-Template.Handlers.csproj.user Inspection-%SERVICE_NAME%.Handlers.csproj.user
					cd ..
                    ren Inspection-Template.Messages Inspection-%SERVICE_NAME%.Messages
					cd Inspection-%SERVICE_NAME%.Messages
					ren Inspection-Template.Messages.csproj Inspection-%SERVICE_NAME%.Messages.csproj
					ren Inspection-Template.Messages.csproj.user Inspection-%SERVICE_NAME%.Messages.csproj.user
					cd ..
                    ren Inspection-Template.Process Inspection-%SERVICE_NAME%.Process
					cd Inspection-%SERVICE_NAME%.Process
					ren Inspection-Template.Process.csproj Inspection-%SERVICE_NAME%.Process.csproj
					ren Inspection-Template.Process.csproj.user Inspection-%SERVICE_NAME%.Process.csproj.user
					ren Inspection-Template.Process.sln Inspection-%SERVICE_NAME%.Process.sln
                    for /r %%f in (*) do (powershell -Command "(Get-Content '%%f') -replace 'Inspection-Template', 'Inspection-%SERVICE_NAME%' | Set-Content '%%f'")
                    """
                }
            }
        }
		
        stage('Create New GitHub Repo') {
            steps {
                script {
                    bat """
						curl -u "PawelKaminski1776:${GITHUB_TOKEN}" ^
							-H "Accept: application/vnd.github.v3+json" ^
							-d "{\\"name\\":\\"${NEW_REPO_NAME}\\", \\"private\\":false}" ^
							https://api.github.com/user/repos
						"""

                }
            }
        }

		stage('Push New Service to GitHub') {
			steps {
				script {
					bat """
					cd Inspection-%SERVICE_NAME%.Process
					git config --global --add safe.directory C:/Users/pawel/.jenkins/workspace/Service-Generator
					git remote set-url origin ${NEW_REPO}

					REM Check if branch 'main' already exists
					git rev-parse --verify main >nul 2>&1
					IF %ERRORLEVEL% NEQ 0 (
						git checkout -b main
					) ELSE (
						git checkout main
					)

					REM Fix potential index corruption
					IF EXIST .git\\index (
						del .git\\index
					)

					git add .
					git commit -m "Initial commit" || echo No changes to commit
					git push -u origin main
					"""
				}
			}
		}
		
		stage('Cleanup Workspace') {
			steps {
				script {
					bat """
					echo Cleaning up workspace...
					
					REM Remove all files and folders except .git
					for /d %%D in (*) do (
						if /I NOT "%%D"=="git" rmdir /s /q "%%D"
					)
					for %%F in (*) do (
						if /I NOT "%%F"==".git" del /f /q "%%F"
					)

					echo Workspace cleanup completed.
					"""
				}
			}
		}
		

		
        
    }
}
